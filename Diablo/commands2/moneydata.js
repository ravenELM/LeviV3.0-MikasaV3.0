const fs = require('fs');
const path = require('path');

module.exports = {
  name: 'moneydata',
  aliases: [],
  description: 'Show how many coins have been generated by month (this year)',

  async run(msg, { conn }) {
    const from = msg.key.remoteJid;
    const file = path.join(__dirname, '..', 'data', 'transactions.json');
    let txs = [];
    try {
      txs = JSON.parse(fs.readFileSync(file));
    } catch {
      return conn.sendMessage(from, { text: '❌ No transaction data found.' }, { quoted: msg });
    }

    // Only positive (generated) coins, this year
    const now = new Date();
    const year = now.getFullYear();
    const months = Array.from({ length: 12 }, (_, i) => ({
      name: new Date(year, i).toLocaleString('default', { month: 'long' }),
      total: 0
    }));

    for (const tx of txs) {
      if (tx.amount > 0) {
        const d = new Date(tx.timestamp);
        if (d.getFullYear() === year) {
          months[d.getMonth()].total += tx.amount;
        }
      }
    }

    let text = `🪙 *Coins Generated by Month (${year})*\n`;
    for (let i = 0; i < months.length; ++i) {
      if (months[i].total > 0 || i === now.getMonth()) {
        text += `\n${months[i].name}: ${months[i].total.toLocaleString()} coins`;
        if (i === now.getMonth()) text += ' (this month, so far)';
      }
    }

    await conn.sendMessage(from, { text }, { quoted: msg });
  }
};